name: Main

on:
  push:
    branches:
      - master
  pull_request:

env:
  LANG: C.UTF-8

jobs:
  test:
    runs-on: ubuntu-latest
    container: ghcr.io/apertium/apertium-apy-cicd
    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pipenv
      - name: Install Pipenv
        run: wget -qO- https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
      - name: Install Pip dependencies
        run: pipenv install --deploy --dev

      - name: Build
        run: pipenv run make

      - name: Test
        run: NONPAIRS=/tmp/languages pipenv run make unit-test
  lint:
    runs-on: ubuntu-latest
    container: ghcr.io/apertium/apertium-apy-cicd
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pipenv
      - name: Install Pipenv
        run: wget -qO- https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
      - name: Install Pip dependencies
        run: pipenv install --deploy --dev

      - name: Build
        run: pipenv run make

      - name: Lint
        run: pipenv run make lint
  coverage:
    runs-on: ubuntu-latest
    container: ghcr.io/apertium/apertium-apy-cicd
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pipenv
      - name: Install Pipenv
        run: wget -qO- https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
      - name: Install Pip dependencies
        run: pipenv install --deploy --dev

      - name: Build
        run: pipenv run make

      - name: Test
        run: NONPAIRS=/tmp/languages pipenv run make coverage

      - name: Coveralls
        run: pipenv run coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
